#!/bin/sh
#
# Adapted from - https://github.com/simonwhitaker/gibo/blob/master/gibo
# Script for easily accessing gitignore boilerplates from
# https://github.com/github/gitignore

remote_repo=https://github.com/github/gitignore.git
local_repo="$HOME/.cache/.gitignore-boilerplates"

usage() {
cat << EOF >&2
Fetches gitignore boilerplates from https://github.com/github/gitignore

Usage:
    $(basename $0) [command]
    OR
    $(basename $0) [boilerplate(s)]

Example:
    $(basename $0) python java >> .gitignore
    $(basename $0) dump python >> .gitignore
    $(basename $0) list
    $(basename $0) search java

Commands:
    dump BOILERPLATE...   Write boilerplate(s) to STDOUT
    help                  Display this help text
    list                  List available boilerplates
    root                  Show the directory where the boilerplates are stored
    search STR            Search for boilerplates with STR in the name
    update                Update list of available boilerplates
EOF
}

clone() {
    if [ $1 -a $1 = '--silently' ]; then
        git clone -q "$remote_repo" "$local_repo"
    else
        echo "Cloning $remote_repo to $local_repo"
        git clone "$remote_repo" "$local_repo"
    fi
}

init() {
    if [ ! -e "$local_repo/.git" ]; then
        clone $1
    fi
}

list() {
    init

    if [ -t 1 ]; then
        shape='column'
    else
        shape='cat'
    fi

    find "$local_repo" -name '*.gitignore' | sort -f \
        | sed -e 's@^.*/\([^/]*\)\.gitignore$@\1@' | eval ${shape}
}

root() {
    echo $local_repo
}

search() {
    init --silently
    for filename in $(find "$local_repo" -iname "*$**.gitignore" -exec basename \{\} .gitignore \; | sort); do
        echo $filename
    done
}

update() {
    if [ ! -e "$local_repo/.git" ]; then
        clone
    else
        cd "$local_repo"
        git pull --ff origin master
    fi
}

dump() {
    init --silently

    # ensure all args are valid biolerplates
    for arg in "$@"; do
        language_file=$(find "$local_repo" -iname "${arg}.gitignore" | head -n 1)
        if ! [ -n "$language_file" ]; then
            echo "could not find gitignore for: $arg" >&2
            exit 1
        fi
    done

    # write biolerplates to stdout
    for arg in "$@"; do
        language_file=$(find "$local_repo" -iname "${arg}.gitignore" | head -n 1)
        language_file_relative="$(basename -- $language_file)"
        language_file_relative=${language_file_relative%".gitignore"}

        echo "### $language_file_relative ###"
        echo
        cat "$language_file"
        echo
        echo
    done
}

# --- Main entry point ----------------------

if [ $# -eq 0 ]; then
    usage
    exit 1
fi

# Parse comand-line
case $1 in
    list )
        list
        exit 0
        ;;
    root )
        root
        exit 0
        ;;
    update )
        update
        exit 0
        ;;
    help )
        usage
        exit 0
        ;;
    dump )
        shift
        dump "$@"
        ;;
    search )
        if [ $# -gt 1 ]; then
            shift
            search $*
            exit 0
        else
            usage
            exit 1
        fi
        ;;
    * ) # default case
        dump "$@"
        ;;
esac
